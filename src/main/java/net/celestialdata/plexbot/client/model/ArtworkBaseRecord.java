/*
 * Plexbot
 * Provides all the API functions necessary for the Plexbot to function.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: brandan.schmitz@celestialdata.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package net.celestialdata.plexbot.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * base artwork record
 */
@ApiModel(description = "base artwork record")
@javax.annotation.
        Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2021-04-15T16:42:07.120298-05:00[America/Chicago]")
public class ArtworkBaseRecord {
    public static final String SERIALIZED_NAME_ID = "id";
    public static final String SERIALIZED_NAME_IMAGE = "image";
    public static final String SERIALIZED_NAME_LANGUAGE = "language";
    public static final String SERIALIZED_NAME_SCORE = "score";
    public static final String SERIALIZED_NAME_THUMBNAIL = "thumbnail";
    public static final String SERIALIZED_NAME_TYPE = "type";
    @SerializedName(SERIALIZED_NAME_ID)
    private Integer id;
    @SerializedName(SERIALIZED_NAME_IMAGE)
    private String image;
    @SerializedName(SERIALIZED_NAME_LANGUAGE)
    private String language;
    @SerializedName(SERIALIZED_NAME_SCORE)
    private BigDecimal score;
    @SerializedName(SERIALIZED_NAME_THUMBNAIL)
    private String thumbnail;
    @SerializedName(SERIALIZED_NAME_TYPE)
    private Long type;

    public ArtworkBaseRecord id(Integer id) {

        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public ArtworkBaseRecord image(String image) {

        this.image = image;
        return this;
    }

    /**
     * Get image
     *
     * @return image
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getImage() {
        return image;
    }

    public void setImage(String image) {
        this.image = image;
    }

    public ArtworkBaseRecord language(String language) {

        this.language = language;
        return this;
    }

    /**
     * Get language
     *
     * @return language
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getLanguage() {
        return language;
    }

    public void setLanguage(String language) {
        this.language = language;
    }

    public ArtworkBaseRecord score(BigDecimal score) {

        this.score = score;
        return this;
    }

    /**
     * Get score
     *
     * @return score
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public BigDecimal getScore() {
        return score;
    }

    public void setScore(BigDecimal score) {
        this.score = score;
    }

    public ArtworkBaseRecord thumbnail(String thumbnail) {

        this.thumbnail = thumbnail;
        return this;
    }

    /**
     * Get thumbnail
     *
     * @return thumbnail
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getThumbnail() {
        return thumbnail;
    }

    public void setThumbnail(String thumbnail) {
        this.thumbnail = thumbnail;
    }

    public ArtworkBaseRecord type(Long type) {

        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Long getType() {
        return type;
    }

    public void setType(Long type) {
        this.type = type;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ArtworkBaseRecord artworkBaseRecord = (ArtworkBaseRecord) o;
        return Objects.equals(this.id, artworkBaseRecord.id) &&
                Objects.equals(this.image, artworkBaseRecord.image) &&
                Objects.equals(this.language, artworkBaseRecord.language) &&
                Objects.equals(this.score, artworkBaseRecord.score) &&
                Objects.equals(this.thumbnail, artworkBaseRecord.thumbnail) &&
                Objects.equals(this.type, artworkBaseRecord.type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, image, language, score, thumbnail, type);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ArtworkBaseRecord {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    image: ").append(toIndentedString(image)).append("\n");
        sb.append("    language: ").append(toIndentedString(language)).append("\n");
        sb.append("    score: ").append(toIndentedString(score)).append("\n");
        sb.append("    thumbnail: ")
                .append(toIndentedString(thumbnail))
                .append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
