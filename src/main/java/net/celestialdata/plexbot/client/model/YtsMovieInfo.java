/*
 * Plexbot
 * Provides all the API functions necessary for the Plexbot to function.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: brandan.schmitz@celestialdata.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package net.celestialdata.plexbot.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.*;

/**
 * Information about a specific movie available on YTS
 */
@ApiModel(description = "Information about a specific movie available on YTS")
@javax.annotation.
        Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2021-02-18T23:30:04.504837-06:00[America/Chicago]")
public class YtsMovieInfo {
    public static final String SERIALIZED_NAME_ID = "id";
    public static final String SERIALIZED_NAME_URL = "url";
    public static final String SERIALIZED_NAME_IMDB_CODE = "imdb_code";
    public static final String SERIALIZED_NAME_TITLE = "title";
    public static final String SERIALIZED_NAME_TITLE_ENGLISH = "title_english";
    public static final String SERIALIZED_NAME_TITLE_LONG = "title_long";
    public static final String SERIALIZED_NAME_SLUG = "slug";
    public static final String SERIALIZED_NAME_YEAR = "year";
    public static final String SERIALIZED_NAME_RATING = "rating";
    public static final String SERIALIZED_NAME_RUNTIME = "runtime";
    public static final String SERIALIZED_NAME_GENRES = "genres";
    public static final String SERIALIZED_NAME_SUMMARY = "summary";
    public static final String SERIALIZED_NAME_DESCRIPTION_FULL =
            "description_full";
    public static final String SERIALIZED_NAME_SYNOPSIS = "synopsis";
    public static final String SERIALIZED_NAME_YT_TRAILER_CODE =
            "yt_trailer_code";
    public static final String SERIALIZED_NAME_LANGUAGE = "language";
    public static final String SERIALIZED_NAME_MPA_RATING = "mpa_rating";
    public static final String SERIALIZED_NAME_BACKGROUND_IMAGE =
            "background_image";
    public static final String SERIALIZED_NAME_BACKGROUND_IMAGE_ORIGINAL =
            "background_image_original";
    public static final String SERIALIZED_NAME_SMALL_COVER_IMAGE =
            "small_cover_image";
    public static final String SERIALIZED_NAME_MEDIUM_COVER_IMAGE =
            "medium_cover_image";
    public static final String SERIALIZED_NAME_LARGE_COVER_IMAGE =
            "large_cover_image";
    public static final String SERIALIZED_NAME_STATE = "state";
    public static final String SERIALIZED_NAME_TORRENTS = "torrents";
    public static final String SERIALIZED_NAME_DATE_UPLOADED = "date_uploaded";
    public static final String SERIALIZED_NAME_DATE_UPLOADED_UNIX =
            "date_uploaded_unix";
    @SerializedName(SERIALIZED_NAME_ID)
    private Integer id;
    @SerializedName(SERIALIZED_NAME_URL)
    private String url;
    @SerializedName(SERIALIZED_NAME_IMDB_CODE)
    private String imdbCode;
    @SerializedName(SERIALIZED_NAME_TITLE)
    private String title;
    @SerializedName(SERIALIZED_NAME_TITLE_ENGLISH)
    private String titleEnglish;
    @SerializedName(SERIALIZED_NAME_TITLE_LONG)
    private String titleLong;
    @SerializedName(SERIALIZED_NAME_SLUG)
    private String slug;
    @SerializedName(SERIALIZED_NAME_YEAR)
    private Integer year;
    @SerializedName(SERIALIZED_NAME_RATING)
    private Double rating;
    @SerializedName(SERIALIZED_NAME_RUNTIME)
    private Integer runtime;
    @SerializedName(SERIALIZED_NAME_GENRES)
    private List<String> genres = null;
    @SerializedName(SERIALIZED_NAME_SUMMARY)
    private String summary;
    @SerializedName(SERIALIZED_NAME_DESCRIPTION_FULL)
    private String descriptionFull;
    @SerializedName(SERIALIZED_NAME_SYNOPSIS)
    private String synopsis;
    @SerializedName(SERIALIZED_NAME_YT_TRAILER_CODE)
    private String ytTrailerCode;
    @SerializedName(SERIALIZED_NAME_LANGUAGE)
    private String language;
    @SerializedName(SERIALIZED_NAME_MPA_RATING)
    private String mpaRating;
    @SerializedName(SERIALIZED_NAME_BACKGROUND_IMAGE)
    private String backgroundImage;
    @SerializedName(SERIALIZED_NAME_BACKGROUND_IMAGE_ORIGINAL)
    private String backgroundImageOriginal;
    @SerializedName(SERIALIZED_NAME_SMALL_COVER_IMAGE)
    private String smallCoverImage;
    @SerializedName(SERIALIZED_NAME_MEDIUM_COVER_IMAGE)
    private String mediumCoverImage;
    @SerializedName(SERIALIZED_NAME_LARGE_COVER_IMAGE)
    private String largeCoverImage;
    @SerializedName(SERIALIZED_NAME_STATE)
    private String state;
    @SerializedName(SERIALIZED_NAME_TORRENTS)
    private Set<YtsTorrentInfo> torrents = null;
    @SerializedName(SERIALIZED_NAME_DATE_UPLOADED)
    private String dateUploaded;
    @SerializedName(SERIALIZED_NAME_DATE_UPLOADED_UNIX)
    private Integer dateUploadedUnix;

    @SuppressWarnings("unused")
    public YtsMovieInfo id(Integer id) {

        this.id = id;
        return this;
    }

    /**
     * YTS movie ID
     *
     * @return id
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "YTS movie ID")

    public Integer getId() {
        return id;
    }

    @SuppressWarnings("unused")
    public void setId(Integer id) {
        this.id = id;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo url(String url) {

        this.url = url;
        return this;
    }

    /**
     * Movie URL
     *
     * @return url
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Movie URL")

    public String getUrl() {
        return url;
    }

    @SuppressWarnings("unused")
    public void setUrl(String url) {
        this.url = url;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo imdbCode(String imdbCode) {

        this.imdbCode = imdbCode;
        return this;
    }

    /**
     * Movie IMDB code
     *
     * @return imdbCode
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Movie IMDB code")

    public String getImdbCode() {
        return imdbCode;
    }

    @SuppressWarnings("unused")
    public void setImdbCode(String imdbCode) {
        this.imdbCode = imdbCode;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo title(String title) {

        this.title = title;
        return this;
    }

    /**
     * Movie Title
     *
     * @return title
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Movie Title")

    public String getTitle() {
        return title;
    }

    @SuppressWarnings("unused")
    public void setTitle(String title) {
        this.title = title;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo titleEnglish(String titleEnglish) {

        this.titleEnglish = titleEnglish;
        return this;
    }

    /**
     * Movie Title (in english)
     *
     * @return titleEnglish
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Movie Title (in english)")

    public String getTitleEnglish() {
        return titleEnglish;
    }

    @SuppressWarnings("unused")
    public void setTitleEnglish(String titleEnglish) {
        this.titleEnglish = titleEnglish;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo titleLong(String titleLong) {

        this.titleLong = titleLong;
        return this;
    }

    /**
     * Full movie title
     *
     * @return titleLong
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Full movie title")

    public String getTitleLong() {
        return titleLong;
    }

    @SuppressWarnings("unused")
    public void setTitleLong(String titleLong) {
        this.titleLong = titleLong;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo slug(String slug) {

        this.slug = slug;
        return this;
    }

    /**
     * Movie slug code
     *
     * @return slug
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Movie slug code")

    public String getSlug() {
        return slug;
    }

    @SuppressWarnings("unused")
    public void setSlug(String slug) {
        this.slug = slug;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo year(Integer year) {

        this.year = year;
        return this;
    }

    /**
     * Movie release year
     *
     * @return year
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Movie release year")

    public Integer getYear() {
        return year;
    }

    @SuppressWarnings("unused")
    public void setYear(Integer year) {
        this.year = year;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo rating(Double rating) {

        this.rating = rating;
        return this;
    }

    /**
     * Movie average rating
     *
     * @return rating
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Movie average rating")

    public Double getRating() {
        return rating;
    }

    @SuppressWarnings("unused")
    public void setRating(Double rating) {
        this.rating = rating;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo runtime(Integer runtime) {

        this.runtime = runtime;
        return this;
    }

    /**
     * Movie runtime (minutes)
     *
     * @return runtime
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Movie runtime (minutes)")

    public Integer getRuntime() {
        return runtime;
    }

    @SuppressWarnings("unused")
    public void setRuntime(Integer runtime) {
        this.runtime = runtime;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo genres(List<String> genres) {

        this.genres = genres;
        return this;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo addGenresItem(String genresItem) {
        if (this.genres == null) {
            this.genres = new ArrayList<>();
        }
        this.genres.add(genresItem);
        return this;
    }

    /**
     * List of generes the movie is classified under
     *
     * @return genres
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "List of generes the movie is classified under")

    public List<String> getGenres() {
        return genres;
    }

    @SuppressWarnings("unused")
    public void setGenres(List<String> genres) {
        this.genres = genres;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo summary(String summary) {

        this.summary = summary;
        return this;
    }

    /**
     * Summary of movie plot
     *
     * @return summary
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Summary of movie plot")

    public String getSummary() {
        return summary;
    }

    @SuppressWarnings("unused")
    public void setSummary(String summary) {
        this.summary = summary;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo descriptionFull(String descriptionFull) {

        this.descriptionFull = descriptionFull;
        return this;
    }

    /**
     * Full length movie description
     *
     * @return descriptionFull
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Full length movie description")

    public String getDescriptionFull() {
        return descriptionFull;
    }

    @SuppressWarnings("unused")
    public void setDescriptionFull(String descriptionFull) {
        this.descriptionFull = descriptionFull;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo synopsis(String synopsis) {

        this.synopsis = synopsis;
        return this;
    }

    /**
     * Movie plot
     *
     * @return synopsis
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Movie plot")

    public String getSynopsis() {
        return synopsis;
    }

    @SuppressWarnings("unused")
    public void setSynopsis(String synopsis) {
        this.synopsis = synopsis;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo ytTrailerCode(String ytTrailerCode) {

        this.ytTrailerCode = ytTrailerCode;
        return this;
    }

    /**
     * YTS Movie trailer code
     *
     * @return ytTrailerCode
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "YTS Movie trailer code")

    public String getYtTrailerCode() {
        return ytTrailerCode;
    }

    @SuppressWarnings("unused")
    public void setYtTrailerCode(String ytTrailerCode) {
        this.ytTrailerCode = ytTrailerCode;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo language(String language) {

        this.language = language;
        return this;
    }

    /**
     * Movie language
     *
     * @return language
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Movie language")

    public String getLanguage() {
        return language;
    }

    @SuppressWarnings("unused")
    public void setLanguage(String language) {
        this.language = language;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo mpaRating(String mpaRating) {

        this.mpaRating = mpaRating;
        return this;
    }

    /**
     * Movie rating
     *
     * @return mpaRating
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Movie rating")

    public String getMpaRating() {
        return mpaRating;
    }

    @SuppressWarnings("unused")
    public void setMpaRating(String mpaRating) {
        this.mpaRating = mpaRating;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo backgroundImage(String backgroundImage) {

        this.backgroundImage = backgroundImage;
        return this;
    }

    /**
     * Movie background image url
     *
     * @return backgroundImage
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Movie background image url")

    public String getBackgroundImage() {
        return backgroundImage;
    }

    @SuppressWarnings("unused")
    public void setBackgroundImage(String backgroundImage) {
        this.backgroundImage = backgroundImage;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo backgroundImageOriginal(String backgroundImageOriginal) {

        this.backgroundImageOriginal = backgroundImageOriginal;
        return this;
    }

    /**
     * Movie original background image url
     *
     * @return backgroundImageOriginal
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Movie original background image url")

    public String getBackgroundImageOriginal() {
        return backgroundImageOriginal;
    }

    @SuppressWarnings("unused")
    public void setBackgroundImageOriginal(String backgroundImageOriginal) {
        this.backgroundImageOriginal = backgroundImageOriginal;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo smallCoverImage(String smallCoverImage) {

        this.smallCoverImage = smallCoverImage;
        return this;
    }

    /**
     * Movie poster image (small)
     *
     * @return smallCoverImage
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Movie poster image (small)")

    public String getSmallCoverImage() {
        return smallCoverImage;
    }

    @SuppressWarnings("unused")
    public void setSmallCoverImage(String smallCoverImage) {
        this.smallCoverImage = smallCoverImage;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo mediumCoverImage(String mediumCoverImage) {

        this.mediumCoverImage = mediumCoverImage;
        return this;
    }

    /**
     * Movie poster image (medium)
     *
     * @return mediumCoverImage
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Movie poster image (medium)")

    public String getMediumCoverImage() {
        return mediumCoverImage;
    }

    @SuppressWarnings("unused")
    public void setMediumCoverImage(String mediumCoverImage) {
        this.mediumCoverImage = mediumCoverImage;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo largeCoverImage(String largeCoverImage) {

        this.largeCoverImage = largeCoverImage;
        return this;
    }

    /**
     * Movie poster image (large)
     *
     * @return largeCoverImage
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Movie poster image (large)")

    public String getLargeCoverImage() {
        return largeCoverImage;
    }

    @SuppressWarnings("unused")
    public void setLargeCoverImage(String largeCoverImage) {
        this.largeCoverImage = largeCoverImage;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo state(String state) {

        this.state = state;
        return this;
    }

    /**
     * Status of the movie listing
     *
     * @return state
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Status of the movie listing")

    public String getState() {
        return state;
    }

    @SuppressWarnings("unused")
    public void setState(String state) {
        this.state = state;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo torrents(Set<YtsTorrentInfo> torrents) {

        this.torrents = torrents;
        return this;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo addTorrentsItem(YtsTorrentInfo torrentsItem) {
        if (this.torrents == null) {
            this.torrents = new LinkedHashSet<>();
        }
        this.torrents.add(torrentsItem);
        return this;
    }

    /**
     * List of movie torrents
     *
     * @return torrents
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "List of movie torrents")

    public Set<YtsTorrentInfo> getTorrents() {
        return torrents;
    }

    @SuppressWarnings("unused")
    public void setTorrents(Set<YtsTorrentInfo> torrents) {
        this.torrents = torrents;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo dateUploaded(String dateUploaded) {

        this.dateUploaded = dateUploaded;
        return this;
    }

    /**
     * Date uploaded
     *
     * @return dateUploaded
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Date uploaded")

    public String getDateUploaded() {
        return dateUploaded;
    }

    @SuppressWarnings("unused")
    public void setDateUploaded(String dateUploaded) {
        this.dateUploaded = dateUploaded;
    }

    @SuppressWarnings("unused")
    public YtsMovieInfo dateUploadedUnix(Integer dateUploadedUnix) {

        this.dateUploadedUnix = dateUploadedUnix;
        return this;
    }

    /**
     * Date uploaded (unix format)
     *
     * @return dateUploadedUnix
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Date uploaded (unix format)")

    public Integer getDateUploadedUnix() {
        return dateUploadedUnix;
    }

    @SuppressWarnings("unused")
    public void setDateUploadedUnix(Integer dateUploadedUnix) {
        this.dateUploadedUnix = dateUploadedUnix;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        YtsMovieInfo ytsMovieInfo = (YtsMovieInfo) o;
        return Objects.equals(this.id, ytsMovieInfo.id) &&
                Objects.equals(this.url, ytsMovieInfo.url) &&
                Objects.equals(this.imdbCode, ytsMovieInfo.imdbCode) &&
                Objects.equals(this.title, ytsMovieInfo.title) &&
                Objects.equals(this.titleEnglish, ytsMovieInfo.titleEnglish) &&
                Objects.equals(this.titleLong, ytsMovieInfo.titleLong) &&
                Objects.equals(this.slug, ytsMovieInfo.slug) &&
                Objects.equals(this.year, ytsMovieInfo.year) &&
                Objects.equals(this.rating, ytsMovieInfo.rating) &&
                Objects.equals(this.runtime, ytsMovieInfo.runtime) &&
                Objects.equals(this.genres, ytsMovieInfo.genres) &&
                Objects.equals(this.summary, ytsMovieInfo.summary) &&
                Objects.equals(this.descriptionFull, ytsMovieInfo.descriptionFull) &&
                Objects.equals(this.synopsis, ytsMovieInfo.synopsis) &&
                Objects.equals(this.ytTrailerCode, ytsMovieInfo.ytTrailerCode) &&
                Objects.equals(this.language, ytsMovieInfo.language) &&
                Objects.equals(this.mpaRating, ytsMovieInfo.mpaRating) &&
                Objects.equals(this.backgroundImage, ytsMovieInfo.backgroundImage) &&
                Objects.equals(this.backgroundImageOriginal,
                        ytsMovieInfo.backgroundImageOriginal) &&
                Objects.equals(this.smallCoverImage, ytsMovieInfo.smallCoverImage) &&
                Objects.equals(this.mediumCoverImage, ytsMovieInfo.mediumCoverImage) &&
                Objects.equals(this.largeCoverImage, ytsMovieInfo.largeCoverImage) &&
                Objects.equals(this.state, ytsMovieInfo.state) &&
                Objects.equals(this.torrents, ytsMovieInfo.torrents) &&
                Objects.equals(this.dateUploaded, ytsMovieInfo.dateUploaded) &&
                Objects.equals(this.dateUploadedUnix, ytsMovieInfo.dateUploadedUnix);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, url, imdbCode, title, titleEnglish, titleLong, slug,
                year, rating, runtime, genres, summary, descriptionFull,
                synopsis, ytTrailerCode, language, mpaRating,
                backgroundImage, backgroundImageOriginal,
                smallCoverImage, mediumCoverImage, largeCoverImage,
                state, torrents, dateUploaded, dateUploadedUnix);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class YtsMovieInfo {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("    imdbCode: ").append(toIndentedString(imdbCode)).append("\n");
        sb.append("    title: ").append(toIndentedString(title)).append("\n");
        sb.append("    titleEnglish: ")
                .append(toIndentedString(titleEnglish))
                .append("\n");
        sb.append("    titleLong: ")
                .append(toIndentedString(titleLong))
                .append("\n");
        sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
        sb.append("    year: ").append(toIndentedString(year)).append("\n");
        sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
        sb.append("    runtime: ").append(toIndentedString(runtime)).append("\n");
        sb.append("    genres: ").append(toIndentedString(genres)).append("\n");
        sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
        sb.append("    descriptionFull: ")
                .append(toIndentedString(descriptionFull))
                .append("\n");
        sb.append("    synopsis: ").append(toIndentedString(synopsis)).append("\n");
        sb.append("    ytTrailerCode: ")
                .append(toIndentedString(ytTrailerCode))
                .append("\n");
        sb.append("    language: ").append(toIndentedString(language)).append("\n");
        sb.append("    mpaRating: ")
                .append(toIndentedString(mpaRating))
                .append("\n");
        sb.append("    backgroundImage: ")
                .append(toIndentedString(backgroundImage))
                .append("\n");
        sb.append("    backgroundImageOriginal: ")
                .append(toIndentedString(backgroundImageOriginal))
                .append("\n");
        sb.append("    smallCoverImage: ")
                .append(toIndentedString(smallCoverImage))
                .append("\n");
        sb.append("    mediumCoverImage: ")
                .append(toIndentedString(mediumCoverImage))
                .append("\n");
        sb.append("    largeCoverImage: ")
                .append(toIndentedString(largeCoverImage))
                .append("\n");
        sb.append("    state: ").append(toIndentedString(state)).append("\n");
        sb.append("    torrents: ").append(toIndentedString(torrents)).append("\n");
        sb.append("    dateUploaded: ")
                .append(toIndentedString(dateUploaded))
                .append("\n");
        sb.append("    dateUploadedUnix: ")
                .append(toIndentedString(dateUploadedUnix))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
