/*
 * Plexbot
 * Provides all the API functions necessary for the Plexbot to function.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: brandan.schmitz@celestialdata.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.celestialdata.plexbot.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.annotation.processing.Generated;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Information about a specific movie available on YTS
 */
@Schema(description = "Information about a specific movie available on YTS")
@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-11-18T04:51:41.119Z[GMT]")
public class YtsMovieInfo {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("imdb_code")
  private String imdbCode = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("title_english")
  private String titleEnglish = null;

  @SerializedName("title_long")
  private String titleLong = null;

  @SerializedName("slug")
  private String slug = null;

  @SerializedName("year")
  private Integer year = null;

  @SerializedName("rating")
  private Integer rating = null;

  @SerializedName("runtime")
  private Integer runtime = null;

  @SerializedName("genres")
  private List<String> genres = null;

  @SerializedName("summary")
  private String summary = null;

  @SerializedName("description_full")
  private String descriptionFull = null;

  @SerializedName("synopsis")
  private String synopsis = null;

  @SerializedName("yt_trailer_code")
  private String ytTrailerCode = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("mpa_rating")
  private String mpaRating = null;

  @SerializedName("background_image")
  private String backgroundImage = null;

  @SerializedName("background_image_original")
  private String backgroundImageOriginal = null;

  @SerializedName("small_cover_image")
  private String smallCoverImage = null;

  @SerializedName("medium_cover_image")
  private String mediumCoverImage = null;

  @SerializedName("large_cover_image")
  private String largeCoverImage = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("torrents")
  private List<YtsTorrentInfo> torrents = null;

  @SerializedName("date_uploaded")
  private String dateUploaded = null;

  @SerializedName("date_uploaded_unix")
  private Integer dateUploadedUnix = null;

  public YtsMovieInfo id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * YTS movie ID
   * @return id
  **/
  @Schema(description = "YTS movie ID")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public YtsMovieInfo url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Movie URL
   * @return url
  **/
  @Schema(description = "Movie URL")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public YtsMovieInfo imdbCode(String imdbCode) {
    this.imdbCode = imdbCode;
    return this;
  }

   /**
   * Movie IMDB code
   * @return imdbCode
  **/
  @Schema(description = "Movie IMDB code")
  public String getImdbCode() {
    return imdbCode;
  }

  public void setImdbCode(String imdbCode) {
    this.imdbCode = imdbCode;
  }

  public YtsMovieInfo title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Movie Title
   * @return title
  **/
  @Schema(description = "Movie Title")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public YtsMovieInfo titleEnglish(String titleEnglish) {
    this.titleEnglish = titleEnglish;
    return this;
  }

   /**
   * Movie Title (in english)
   * @return titleEnglish
  **/
  @Schema(description = "Movie Title (in english)")
  public String getTitleEnglish() {
    return titleEnglish;
  }

  public void setTitleEnglish(String titleEnglish) {
    this.titleEnglish = titleEnglish;
  }

  public YtsMovieInfo titleLong(String titleLong) {
    this.titleLong = titleLong;
    return this;
  }

   /**
   * Full movie title
   * @return titleLong
  **/
  @Schema(description = "Full movie title")
  public String getTitleLong() {
    return titleLong;
  }

  public void setTitleLong(String titleLong) {
    this.titleLong = titleLong;
  }

  public YtsMovieInfo slug(String slug) {
    this.slug = slug;
    return this;
  }

   /**
   * Movie slug code
   * @return slug
  **/
  @Schema(description = "Movie slug code")
  public String getSlug() {
    return slug;
  }

  public void setSlug(String slug) {
    this.slug = slug;
  }

  public YtsMovieInfo year(Integer year) {
    this.year = year;
    return this;
  }

   /**
   * Movie release year
   * @return year
  **/
  @Schema(description = "Movie release year")
  public Integer getYear() {
    return year;
  }

  public void setYear(Integer year) {
    this.year = year;
  }

  public YtsMovieInfo rating(Integer rating) {
    this.rating = rating;
    return this;
  }

   /**
   * Movie average rating
   * @return rating
  **/
  @Schema(description = "Movie average rating")
  public Integer getRating() {
    return rating;
  }

  public void setRating(Integer rating) {
    this.rating = rating;
  }

  public YtsMovieInfo runtime(Integer runtime) {
    this.runtime = runtime;
    return this;
  }

   /**
   * Movie runtime (minutes)
   * @return runtime
  **/
  @Schema(description = "Movie runtime (minutes)")
  public Integer getRuntime() {
    return runtime;
  }

  public void setRuntime(Integer runtime) {
    this.runtime = runtime;
  }

  public YtsMovieInfo genres(List<String> genres) {
    this.genres = genres;
    return this;
  }

  public YtsMovieInfo addGenresItem(String genresItem) {
    if (this.genres == null) {
      this.genres = new ArrayList<String>();
    }
    this.genres.add(genresItem);
    return this;
  }

   /**
   * List of generes the movie is classified under
   * @return genres
  **/
  @Schema(description = "List of generes the movie is classified under")
  public List<String> getGenres() {
    return genres;
  }

  public void setGenres(List<String> genres) {
    this.genres = genres;
  }

  public YtsMovieInfo summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Summary of movie plot
   * @return summary
  **/
  @Schema(description = "Summary of movie plot")
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }

  public YtsMovieInfo descriptionFull(String descriptionFull) {
    this.descriptionFull = descriptionFull;
    return this;
  }

   /**
   * Full length movie description
   * @return descriptionFull
  **/
  @Schema(description = "Full length movie description")
  public String getDescriptionFull() {
    return descriptionFull;
  }

  public void setDescriptionFull(String descriptionFull) {
    this.descriptionFull = descriptionFull;
  }

  public YtsMovieInfo synopsis(String synopsis) {
    this.synopsis = synopsis;
    return this;
  }

   /**
   * Movie plot
   * @return synopsis
  **/
  @Schema(description = "Movie plot")
  public String getSynopsis() {
    return synopsis;
  }

  public void setSynopsis(String synopsis) {
    this.synopsis = synopsis;
  }

  public YtsMovieInfo ytTrailerCode(String ytTrailerCode) {
    this.ytTrailerCode = ytTrailerCode;
    return this;
  }

   /**
   * YTS Movie trailer code
   * @return ytTrailerCode
  **/
  @Schema(description = "YTS Movie trailer code")
  public String getYtTrailerCode() {
    return ytTrailerCode;
  }

  public void setYtTrailerCode(String ytTrailerCode) {
    this.ytTrailerCode = ytTrailerCode;
  }

  public YtsMovieInfo language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Movie language
   * @return language
  **/
  @Schema(description = "Movie language")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public YtsMovieInfo mpaRating(String mpaRating) {
    this.mpaRating = mpaRating;
    return this;
  }

   /**
   * Movie rating
   * @return mpaRating
  **/
  @Schema(description = "Movie rating")
  public String getMpaRating() {
    return mpaRating;
  }

  public void setMpaRating(String mpaRating) {
    this.mpaRating = mpaRating;
  }

  public YtsMovieInfo backgroundImage(String backgroundImage) {
    this.backgroundImage = backgroundImage;
    return this;
  }

   /**
   * Movie background image url
   * @return backgroundImage
  **/
  @Schema(description = "Movie background image url")
  public String getBackgroundImage() {
    return backgroundImage;
  }

  public void setBackgroundImage(String backgroundImage) {
    this.backgroundImage = backgroundImage;
  }

  public YtsMovieInfo backgroundImageOriginal(String backgroundImageOriginal) {
    this.backgroundImageOriginal = backgroundImageOriginal;
    return this;
  }

   /**
   * Movie original background image url
   * @return backgroundImageOriginal
  **/
  @Schema(description = "Movie original background image url")
  public String getBackgroundImageOriginal() {
    return backgroundImageOriginal;
  }

  public void setBackgroundImageOriginal(String backgroundImageOriginal) {
    this.backgroundImageOriginal = backgroundImageOriginal;
  }

  public YtsMovieInfo smallCoverImage(String smallCoverImage) {
    this.smallCoverImage = smallCoverImage;
    return this;
  }

   /**
   * Movie poster image (small)
   * @return smallCoverImage
  **/
  @Schema(description = "Movie poster image (small)")
  public String getSmallCoverImage() {
    return smallCoverImage;
  }

  public void setSmallCoverImage(String smallCoverImage) {
    this.smallCoverImage = smallCoverImage;
  }

  public YtsMovieInfo mediumCoverImage(String mediumCoverImage) {
    this.mediumCoverImage = mediumCoverImage;
    return this;
  }

   /**
   * Movie poster image (medium)
   * @return mediumCoverImage
  **/
  @Schema(description = "Movie poster image (medium)")
  public String getMediumCoverImage() {
    return mediumCoverImage;
  }

  public void setMediumCoverImage(String mediumCoverImage) {
    this.mediumCoverImage = mediumCoverImage;
  }

  public YtsMovieInfo largeCoverImage(String largeCoverImage) {
    this.largeCoverImage = largeCoverImage;
    return this;
  }

   /**
   * Movie poster image (large)
   * @return largeCoverImage
  **/
  @Schema(description = "Movie poster image (large)")
  public String getLargeCoverImage() {
    return largeCoverImage;
  }

  public void setLargeCoverImage(String largeCoverImage) {
    this.largeCoverImage = largeCoverImage;
  }

  public YtsMovieInfo state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Status of the movie listing
   * @return state
  **/
  @Schema(description = "Status of the movie listing")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public YtsMovieInfo torrents(List<YtsTorrentInfo> torrents) {
    this.torrents = torrents;
    return this;
  }

  public YtsMovieInfo addTorrentsItem(YtsTorrentInfo torrentsItem) {
    if (this.torrents == null) {
      this.torrents = new ArrayList<YtsTorrentInfo>();
    }
    this.torrents.add(torrentsItem);
    return this;
  }

   /**
   * List of movie torrents
   * @return torrents
  **/
  @Schema(description = "List of movie torrents")
  public List<YtsTorrentInfo> getTorrents() {
    return torrents;
  }

  public void setTorrents(List<YtsTorrentInfo> torrents) {
    this.torrents = torrents;
  }

  public YtsMovieInfo dateUploaded(String dateUploaded) {
    this.dateUploaded = dateUploaded;
    return this;
  }

   /**
   * Date uploaded
   * @return dateUploaded
  **/
  @Schema(description = "Date uploaded")
  public String getDateUploaded() {
    return dateUploaded;
  }

  public void setDateUploaded(String dateUploaded) {
    this.dateUploaded = dateUploaded;
  }

  public YtsMovieInfo dateUploadedUnix(Integer dateUploadedUnix) {
    this.dateUploadedUnix = dateUploadedUnix;
    return this;
  }

   /**
   * Date uploaded (unix format)
   * @return dateUploadedUnix
  **/
  @Schema(description = "Date uploaded (unix format)")
  public Integer getDateUploadedUnix() {
    return dateUploadedUnix;
  }

  public void setDateUploadedUnix(Integer dateUploadedUnix) {
    this.dateUploadedUnix = dateUploadedUnix;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    YtsMovieInfo ytsMovieInfo = (YtsMovieInfo) o;
    return Objects.equals(this.id, ytsMovieInfo.id) &&
        Objects.equals(this.url, ytsMovieInfo.url) &&
        Objects.equals(this.imdbCode, ytsMovieInfo.imdbCode) &&
        Objects.equals(this.title, ytsMovieInfo.title) &&
        Objects.equals(this.titleEnglish, ytsMovieInfo.titleEnglish) &&
        Objects.equals(this.titleLong, ytsMovieInfo.titleLong) &&
        Objects.equals(this.slug, ytsMovieInfo.slug) &&
        Objects.equals(this.year, ytsMovieInfo.year) &&
        Objects.equals(this.rating, ytsMovieInfo.rating) &&
        Objects.equals(this.runtime, ytsMovieInfo.runtime) &&
        Objects.equals(this.genres, ytsMovieInfo.genres) &&
        Objects.equals(this.summary, ytsMovieInfo.summary) &&
        Objects.equals(this.descriptionFull, ytsMovieInfo.descriptionFull) &&
        Objects.equals(this.synopsis, ytsMovieInfo.synopsis) &&
        Objects.equals(this.ytTrailerCode, ytsMovieInfo.ytTrailerCode) &&
        Objects.equals(this.language, ytsMovieInfo.language) &&
        Objects.equals(this.mpaRating, ytsMovieInfo.mpaRating) &&
        Objects.equals(this.backgroundImage, ytsMovieInfo.backgroundImage) &&
        Objects.equals(this.backgroundImageOriginal, ytsMovieInfo.backgroundImageOriginal) &&
        Objects.equals(this.smallCoverImage, ytsMovieInfo.smallCoverImage) &&
        Objects.equals(this.mediumCoverImage, ytsMovieInfo.mediumCoverImage) &&
        Objects.equals(this.largeCoverImage, ytsMovieInfo.largeCoverImage) &&
        Objects.equals(this.state, ytsMovieInfo.state) &&
        Objects.equals(this.torrents, ytsMovieInfo.torrents) &&
        Objects.equals(this.dateUploaded, ytsMovieInfo.dateUploaded) &&
        Objects.equals(this.dateUploadedUnix, ytsMovieInfo.dateUploadedUnix);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, imdbCode, title, titleEnglish, titleLong, slug, year, rating, runtime, genres, summary, descriptionFull, synopsis, ytTrailerCode, language, mpaRating, backgroundImage, backgroundImageOriginal, smallCoverImage, mediumCoverImage, largeCoverImage, state, torrents, dateUploaded, dateUploadedUnix);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class YtsMovieInfo {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    imdbCode: ").append(toIndentedString(imdbCode)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    titleEnglish: ").append(toIndentedString(titleEnglish)).append("\n");
    sb.append("    titleLong: ").append(toIndentedString(titleLong)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    runtime: ").append(toIndentedString(runtime)).append("\n");
    sb.append("    genres: ").append(toIndentedString(genres)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    descriptionFull: ").append(toIndentedString(descriptionFull)).append("\n");
    sb.append("    synopsis: ").append(toIndentedString(synopsis)).append("\n");
    sb.append("    ytTrailerCode: ").append(toIndentedString(ytTrailerCode)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    mpaRating: ").append(toIndentedString(mpaRating)).append("\n");
    sb.append("    backgroundImage: ").append(toIndentedString(backgroundImage)).append("\n");
    sb.append("    backgroundImageOriginal: ").append(toIndentedString(backgroundImageOriginal)).append("\n");
    sb.append("    smallCoverImage: ").append(toIndentedString(smallCoverImage)).append("\n");
    sb.append("    mediumCoverImage: ").append(toIndentedString(mediumCoverImage)).append("\n");
    sb.append("    largeCoverImage: ").append(toIndentedString(largeCoverImage)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    torrents: ").append(toIndentedString(torrents)).append("\n");
    sb.append("    dateUploaded: ").append(toIndentedString(dateUploaded)).append("\n");
    sb.append("    dateUploadedUnix: ").append(toIndentedString(dateUploadedUnix)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
