/*
 * Plexbot
 * Provides all the API functions necessary for the Plexbot to function.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: brandan.schmitz@celestialdata.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package net.celestialdata.plexbot.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * base episode record
 */
@ApiModel(description = "base episode record")
@javax.annotation.
        Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2021-04-15T16:42:07.120298-05:00[America/Chicago]")
public class EpisodeBaseRecord {
    public static final String SERIALIZED_NAME_AIRED = "aired";
    public static final String SERIALIZED_NAME_ID = "id";
    public static final String SERIALIZED_NAME_IMAGE = "image";
    public static final String SERIALIZED_NAME_IMAGE_TYPE = "imageType";
    public static final String SERIALIZED_NAME_IS_MOVIE = "isMovie";
    public static final String SERIALIZED_NAME_NAME = "name";
    public static final String SERIALIZED_NAME_NAME_TRANSLATIONS =
            "nameTranslations";
    public static final String SERIALIZED_NAME_NUMBER = "number";
    public static final String SERIALIZED_NAME_OVERVIEW_TRANSLATIONS =
            "overviewTranslations";
    public static final String SERIALIZED_NAME_RUNTIME = "runtime";
    public static final String SERIALIZED_NAME_SEASON_NUMBER = "seasonNumber";
    public static final String SERIALIZED_NAME_SEASONS = "seasons";
    public static final String SERIALIZED_NAME_SERIES_ID = "seriesId";
    @SerializedName(SERIALIZED_NAME_AIRED)
    private String aired;
    @SerializedName(SERIALIZED_NAME_ID)
    private Long id;
    @SerializedName(SERIALIZED_NAME_IMAGE)
    private String image;
    @SerializedName(SERIALIZED_NAME_IMAGE_TYPE)
    private Integer imageType;
    @SerializedName(SERIALIZED_NAME_IS_MOVIE)
    private Long isMovie;
    @SerializedName(SERIALIZED_NAME_NAME)
    private String name;
    @SerializedName(SERIALIZED_NAME_NAME_TRANSLATIONS)
    private List<String> nameTranslations = null;
    @SerializedName(SERIALIZED_NAME_NUMBER)
    private Integer number;
    @SerializedName(SERIALIZED_NAME_OVERVIEW_TRANSLATIONS)
    private List<String> overviewTranslations = null;
    @SerializedName(SERIALIZED_NAME_RUNTIME)
    private Integer runtime;
    @SerializedName(SERIALIZED_NAME_SEASON_NUMBER)
    private Integer seasonNumber;
    @SerializedName(SERIALIZED_NAME_SEASONS)
    private List<SeasonBaseRecord> seasons = null;
    @SerializedName(SERIALIZED_NAME_SERIES_ID)
    private Long seriesId;

    public EpisodeBaseRecord aired(String aired) {

        this.aired = aired;
        return this;
    }

    /**
     * Get aired
     *
     * @return aired
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getAired() {
        return aired;
    }

    public void setAired(String aired) {
        this.aired = aired;
    }

    public EpisodeBaseRecord id(Long id) {

        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @ApiModelProperty(value = "")

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public EpisodeBaseRecord image(String image) {

        this.image = image;
        return this;
    }

    /**
     * Get image
     *
     * @return image
     **/
    @ApiModelProperty(value = "")

    public String getImage() {
        return image;
    }

    public void setImage(String image) {
        this.image = image;
    }

    public EpisodeBaseRecord imageType(Integer imageType) {

        this.imageType = imageType;
        return this;
    }

    /**
     * Get imageType
     *
     * @return imageType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getImageType() {
        return imageType;
    }

    public void setImageType(Integer imageType) {
        this.imageType = imageType;
    }

    public EpisodeBaseRecord isMovie(Long isMovie) {

        this.isMovie = isMovie;
        return this;
    }

    /**
     * Get isMovie
     *
     * @return isMovie
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Long getIsMovie() {
        return isMovie;
    }

    public void setIsMovie(Long isMovie) {
        this.isMovie = isMovie;
    }

    public EpisodeBaseRecord name(String name) {

        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public EpisodeBaseRecord nameTranslations(List<String> nameTranslations) {

        this.nameTranslations = nameTranslations;
        return this;
    }

    public EpisodeBaseRecord
    addNameTranslationsItem(String nameTranslationsItem) {
        if (this.nameTranslations == null) {
            this.nameTranslations = new ArrayList<>();
        }
        this.nameTranslations.add(nameTranslationsItem);
        return this;
    }

    /**
     * Get nameTranslations
     *
     * @return nameTranslations
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getNameTranslations() {
        return nameTranslations;
    }

    public void setNameTranslations(List<String> nameTranslations) {
        this.nameTranslations = nameTranslations;
    }

    public EpisodeBaseRecord number(Integer number) {

        this.number = number;
        return this;
    }

    /**
     * Get number
     *
     * @return number
     **/
    @ApiModelProperty(value = "")

    public Integer getNumber() {
        return number;
    }

    public void setNumber(Integer number) {
        this.number = number;
    }

    public EpisodeBaseRecord
    overviewTranslations(List<String> overviewTranslations) {

        this.overviewTranslations = overviewTranslations;
        return this;
    }

    public EpisodeBaseRecord
    addOverviewTranslationsItem(String overviewTranslationsItem) {
        if (this.overviewTranslations == null) {
            this.overviewTranslations = new ArrayList<>();
        }
        this.overviewTranslations.add(overviewTranslationsItem);
        return this;
    }

    /**
     * Get overviewTranslations
     *
     * @return overviewTranslations
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getOverviewTranslations() {
        return overviewTranslations;
    }

    public void setOverviewTranslations(List<String> overviewTranslations) {
        this.overviewTranslations = overviewTranslations;
    }

    public EpisodeBaseRecord runtime(Integer runtime) {

        this.runtime = runtime;
        return this;
    }

    /**
     * Get runtime
     *
     * @return runtime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getRuntime() {
        return runtime;
    }

    public void setRuntime(Integer runtime) {
        this.runtime = runtime;
    }

    public EpisodeBaseRecord seasonNumber(Integer seasonNumber) {

        this.seasonNumber = seasonNumber;
        return this;
    }

    /**
     * Get seasonNumber
     *
     * @return seasonNumber
     **/
    @ApiModelProperty(value = "")

    public Integer getSeasonNumber() {
        return seasonNumber;
    }

    public void setSeasonNumber(Integer seasonNumber) {
        this.seasonNumber = seasonNumber;
    }

    public EpisodeBaseRecord seasons(List<SeasonBaseRecord> seasons) {

        this.seasons = seasons;
        return this;
    }

    public EpisodeBaseRecord addSeasonsItem(SeasonBaseRecord seasonsItem) {
        if (this.seasons == null) {
            this.seasons = new ArrayList<>();
        }
        this.seasons.add(seasonsItem);
        return this;
    }

    /**
     * Get seasons
     *
     * @return seasons
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<SeasonBaseRecord> getSeasons() {
        return seasons;
    }

    public void setSeasons(List<SeasonBaseRecord> seasons) {
        this.seasons = seasons;
    }

    public EpisodeBaseRecord seriesId(Long seriesId) {

        this.seriesId = seriesId;
        return this;
    }

    /**
     * Get seriesId
     *
     * @return seriesId
     **/
    @ApiModelProperty(value = "")

    public Long getSeriesId() {
        return seriesId;
    }

    public void setSeriesId(Long seriesId) {
        this.seriesId = seriesId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EpisodeBaseRecord episodeBaseRecord = (EpisodeBaseRecord) o;
        return Objects.equals(this.aired, episodeBaseRecord.aired) &&
                Objects.equals(this.id, episodeBaseRecord.id) &&
                Objects.equals(this.image, episodeBaseRecord.image) &&
                Objects.equals(this.imageType, episodeBaseRecord.imageType) &&
                Objects.equals(this.isMovie, episodeBaseRecord.isMovie) &&
                Objects.equals(this.name, episodeBaseRecord.name) &&
                Objects.equals(this.nameTranslations,
                        episodeBaseRecord.nameTranslations) &&
                Objects.equals(this.number, episodeBaseRecord.number) &&
                Objects.equals(this.overviewTranslations,
                        episodeBaseRecord.overviewTranslations) &&
                Objects.equals(this.runtime, episodeBaseRecord.runtime) &&
                Objects.equals(this.seasonNumber, episodeBaseRecord.seasonNumber) &&
                Objects.equals(this.seasons, episodeBaseRecord.seasons) &&
                Objects.equals(this.seriesId, episodeBaseRecord.seriesId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(aired, id, image, imageType, isMovie, name,
                nameTranslations, number, overviewTranslations, runtime,
                seasonNumber, seasons, seriesId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class EpisodeBaseRecord {\n");
        sb.append("    aired: ").append(toIndentedString(aired)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    image: ").append(toIndentedString(image)).append("\n");
        sb.append("    imageType: ")
                .append(toIndentedString(imageType))
                .append("\n");
        sb.append("    isMovie: ").append(toIndentedString(isMovie)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    nameTranslations: ")
                .append(toIndentedString(nameTranslations))
                .append("\n");
        sb.append("    number: ").append(toIndentedString(number)).append("\n");
        sb.append("    overviewTranslations: ")
                .append(toIndentedString(overviewTranslations))
                .append("\n");
        sb.append("    runtime: ").append(toIndentedString(runtime)).append("\n");
        sb.append("    seasonNumber: ")
                .append(toIndentedString(seasonNumber))
                .append("\n");
        sb.append("    seasons: ").append(toIndentedString(seasons)).append("\n");
        sb.append("    seriesId: ").append(toIndentedString(seriesId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
