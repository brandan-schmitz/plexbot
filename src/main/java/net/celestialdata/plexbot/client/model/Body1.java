/*
 * Plexbot
 * Provides all the API functions necessary for the Plexbot to function.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: brandan.schmitz@celestialdata.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.celestialdata.plexbot.client.model;

import com.google.gson.annotations.SerializedName;

import javax.annotation.processing.Generated;
import java.util.Objects;

/**
 * Body1
 */

@SuppressWarnings("unused")
@Generated(value = "net.celestialdata.plexbot.codegen.v3.generators.java.JavaClientCodegen", date = "2020-11-23T04:57:45.670Z[GMT]")
public class Body1 {
    @SerializedName("magnet")
    private String magnet = null;

    @SuppressWarnings("unused")
    public Body1 magnet(String magnet) {
        this.magnet = magnet;
        return this;
    }

    /**
     * Magnet link
     *
     * @return magnet
     **/
    @SuppressWarnings("unused")
    public String getMagnet() {
        return magnet;
    }

    @SuppressWarnings("unused")
    public void setMagnet(String magnet) {
        this.magnet = magnet;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Body1 body1 = (Body1) o;
        return Objects.equals(this.magnet, body1.magnet);
    }

    @Override
    public int hashCode() {
        return Objects.hash(magnet);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Body1 {\n");

        sb.append("    magnet: ").append(toIndentedString(magnet)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
