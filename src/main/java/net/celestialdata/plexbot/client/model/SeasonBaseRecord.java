/*
 * Plexbot
 * Provides all the API functions necessary for the Plexbot to function.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: brandan.schmitz@celestialdata.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package net.celestialdata.plexbot.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * season genre record
 */
@ApiModel(description = "season genre record")
@javax.annotation.
        Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2021-04-15T21:55:22.602223-05:00[America/Chicago]")
public class SeasonBaseRecord {
    public static final String SERIALIZED_NAME_ABBREVIATION = "abbreviation";
    public static final String SERIALIZED_NAME_COUNTRY = "country";
    public static final String SERIALIZED_NAME_ID = "id";
    public static final String SERIALIZED_NAME_IMAGE = "image";
    public static final String SERIALIZED_NAME_IMAGE_TYPE = "imageType";
    public static final String SERIALIZED_NAME_NAME = "name";
    public static final String SERIALIZED_NAME_NAME_TRANSLATIONS =
            "nameTranslations";
    public static final String SERIALIZED_NAME_NUMBER = "number";
    public static final String SERIALIZED_NAME_OVERVIEW_TRANSLATIONS =
            "overviewTranslations";
    public static final String SERIALIZED_NAME_SERIES_ID = "seriesId";
    public static final String SERIALIZED_NAME_SLUG = "slug";
    public static final String SERIALIZED_NAME_TYPE = "type";
    @SerializedName(SERIALIZED_NAME_ABBREVIATION)
    private String abbreviation;
    @SerializedName(SERIALIZED_NAME_COUNTRY)
    private String country;
    @SerializedName(SERIALIZED_NAME_ID)
    private Integer id;
    @SerializedName(SERIALIZED_NAME_IMAGE)
    private String image;
    @SerializedName(SERIALIZED_NAME_IMAGE_TYPE)
    private Integer imageType;
    @SerializedName(SERIALIZED_NAME_NAME)
    private String name;
    @SerializedName(SERIALIZED_NAME_NAME_TRANSLATIONS)
    private List<String> nameTranslations = null;
    @SerializedName(SERIALIZED_NAME_NUMBER)
    private Long number;
    @SerializedName(SERIALIZED_NAME_OVERVIEW_TRANSLATIONS)
    private List<String> overviewTranslations = null;
    @SerializedName(SERIALIZED_NAME_SERIES_ID)
    private Long seriesId;
    @SerializedName(SERIALIZED_NAME_SLUG)
    private String slug;
    @SerializedName(SERIALIZED_NAME_TYPE)
    private SeasonType type;

    public SeasonBaseRecord abbreviation(String abbreviation) {

        this.abbreviation = abbreviation;
        return this;
    }

    /**
     * Get abbreviation
     *
     * @return abbreviation
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getAbbreviation() {
        return abbreviation;
    }

    public void setAbbreviation(String abbreviation) {
        this.abbreviation = abbreviation;
    }

    public SeasonBaseRecord country(String country) {

        this.country = country;
        return this;
    }

    /**
     * Get country
     *
     * @return country
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public SeasonBaseRecord id(Integer id) {

        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public SeasonBaseRecord image(String image) {

        this.image = image;
        return this;
    }

    /**
     * Get image
     *
     * @return image
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getImage() {
        return image;
    }

    public void setImage(String image) {
        this.image = image;
    }

    public SeasonBaseRecord imageType(Integer imageType) {

        this.imageType = imageType;
        return this;
    }

    /**
     * Get imageType
     *
     * @return imageType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Integer getImageType() {
        return imageType;
    }

    public void setImageType(Integer imageType) {
        this.imageType = imageType;
    }

    public SeasonBaseRecord name(String name) {

        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public SeasonBaseRecord nameTranslations(List<String> nameTranslations) {

        this.nameTranslations = nameTranslations;
        return this;
    }

    public SeasonBaseRecord addNameTranslationsItem(String nameTranslationsItem) {
        if (this.nameTranslations == null) {
            this.nameTranslations = new ArrayList<>();
        }
        this.nameTranslations.add(nameTranslationsItem);
        return this;
    }

    /**
     * Get nameTranslations
     *
     * @return nameTranslations
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getNameTranslations() {
        return nameTranslations;
    }

    public void setNameTranslations(List<String> nameTranslations) {
        this.nameTranslations = nameTranslations;
    }

    public SeasonBaseRecord number(Long number) {

        this.number = number;
        return this;
    }

    /**
     * Get number
     *
     * @return number
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Long getNumber() {
        return number;
    }

    public void setNumber(Long number) {
        this.number = number;
    }

    public SeasonBaseRecord
    overviewTranslations(List<String> overviewTranslations) {

        this.overviewTranslations = overviewTranslations;
        return this;
    }

    public SeasonBaseRecord
    addOverviewTranslationsItem(String overviewTranslationsItem) {
        if (this.overviewTranslations == null) {
            this.overviewTranslations = new ArrayList<>();
        }
        this.overviewTranslations.add(overviewTranslationsItem);
        return this;
    }

    /**
     * Get overviewTranslations
     *
     * @return overviewTranslations
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getOverviewTranslations() {
        return overviewTranslations;
    }

    public void setOverviewTranslations(List<String> overviewTranslations) {
        this.overviewTranslations = overviewTranslations;
    }

    public SeasonBaseRecord seriesId(Long seriesId) {

        this.seriesId = seriesId;
        return this;
    }

    /**
     * Get seriesId
     *
     * @return seriesId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Long getSeriesId() {
        return seriesId;
    }

    public void setSeriesId(Long seriesId) {
        this.seriesId = seriesId;
    }

    public SeasonBaseRecord slug(String slug) {

        this.slug = slug;
        return this;
    }

    /**
     * Get slug
     *
     * @return slug
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getSlug() {
        return slug;
    }

    public void setSlug(String slug) {
        this.slug = slug;
    }

    public SeasonBaseRecord type(SeasonType type) {

        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public SeasonType getType() {
        return type;
    }

    public void setType(SeasonType type) {
        this.type = type;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SeasonBaseRecord seasonBaseRecord = (SeasonBaseRecord) o;
        return Objects.equals(this.abbreviation, seasonBaseRecord.abbreviation) &&
                Objects.equals(this.country, seasonBaseRecord.country) &&
                Objects.equals(this.id, seasonBaseRecord.id) &&
                Objects.equals(this.image, seasonBaseRecord.image) &&
                Objects.equals(this.imageType, seasonBaseRecord.imageType) &&
                Objects.equals(this.name, seasonBaseRecord.name) &&
                Objects.equals(this.nameTranslations,
                        seasonBaseRecord.nameTranslations) &&
                Objects.equals(this.number, seasonBaseRecord.number) &&
                Objects.equals(this.overviewTranslations,
                        seasonBaseRecord.overviewTranslations) &&
                Objects.equals(this.seriesId, seasonBaseRecord.seriesId) &&
                Objects.equals(this.slug, seasonBaseRecord.slug) &&
                Objects.equals(this.type, seasonBaseRecord.type);
    }

    @Override
    public int hashCode() {
        return Objects.hash(abbreviation, country, id, image, imageType, name,
                nameTranslations, number, overviewTranslations,
                seriesId, slug, type);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SeasonBaseRecord {\n");
        sb.append("    abbreviation: ")
                .append(toIndentedString(abbreviation))
                .append("\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    image: ").append(toIndentedString(image)).append("\n");
        sb.append("    imageType: ")
                .append(toIndentedString(imageType))
                .append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    nameTranslations: ")
                .append(toIndentedString(nameTranslations))
                .append("\n");
        sb.append("    number: ").append(toIndentedString(number)).append("\n");
        sb.append("    overviewTranslations: ")
                .append(toIndentedString(overviewTranslations))
                .append("\n");
        sb.append("    seriesId: ").append(toIndentedString(seriesId)).append("\n");
        sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
