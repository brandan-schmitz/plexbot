/*
 * Plexbot
 * Provides all the API functions necessary for the Plexbot to function.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: brandan.schmitz@celestialdata.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package net.celestialdata.plexbot.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Base response of request to YTS
 */
@ApiModel(description = "Base response of request to YTS")
@javax.annotation.
        Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2021-02-18T23:30:04.504837-06:00[America/Chicago]")
public class YtsBaseResponse {
    public static final String SERIALIZED_NAME_STATUS = "status";
    public static final String SERIALIZED_NAME_STATUS_MESSAGE = "status_message";
    public static final String SERIALIZED_NAME_DATA = "data";
    @SerializedName(SERIALIZED_NAME_STATUS)
    private String status;
    @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
    private String statusMessage;
    @SerializedName(SERIALIZED_NAME_DATA)
    private YtsSearchResult data;

    @SuppressWarnings("unused")
    public YtsBaseResponse status(String status) {

        this.status = status;
        return this;
    }

    /**
     * Request status
     *
     * @return status
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Request status")

    public String getStatus() {
        return status;
    }

    @SuppressWarnings("unused")
    public void setStatus(String status) {
        this.status = status;
    }

    @SuppressWarnings("unused")
    public YtsBaseResponse statusMessage(String statusMessage) {

        this.statusMessage = statusMessage;
        return this;
    }

    /**
     * Request status message
     *
     * @return statusMessage
     **/
    @SuppressWarnings("unused")
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Request status message")

    public String getStatusMessage() {
        return statusMessage;
    }

    @SuppressWarnings("unused")
    public void setStatusMessage(String statusMessage) {
        this.statusMessage = statusMessage;
    }

    @SuppressWarnings("unused")
    public YtsBaseResponse data(YtsSearchResult data) {

        this.data = data;
        return this;
    }

    /**
     * Get data
     *
     * @return data
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public YtsSearchResult getData() {
        return data;
    }

    @SuppressWarnings("unused")
    public void setData(YtsSearchResult data) {
        this.data = data;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        YtsBaseResponse ytsBaseResponse = (YtsBaseResponse) o;
        return Objects.equals(this.status, ytsBaseResponse.status) &&
                Objects.equals(this.statusMessage, ytsBaseResponse.statusMessage) &&
                Objects.equals(this.data, ytsBaseResponse.data);
    }

    @Override
    public int hashCode() {
        return Objects.hash(status, statusMessage, data);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class YtsBaseResponse {\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    statusMessage: ")
                .append(toIndentedString(statusMessage))
                .append("\n");
        sb.append("    data: ").append(toIndentedString(data)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
