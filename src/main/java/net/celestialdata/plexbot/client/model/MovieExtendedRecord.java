/*
 * Plexbot
 * Provides all the API functions necessary for the Plexbot to function.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: brandan.schmitz@celestialdata.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

package net.celestialdata.plexbot.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * extended movie record
 */
@ApiModel(description = "extended movie record")
@javax.annotation.
        Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen",
        date = "2021-04-15T16:42:07.120298-05:00[America/Chicago]")
public class MovieExtendedRecord {
    public static final String SERIALIZED_NAME_ALIASES = "aliases";
    public static final String SERIALIZED_NAME_ARTWORKS = "artworks";
    public static final String SERIALIZED_NAME_AUDIO_LANGUAGES = "audioLanguages";
    public static final String SERIALIZED_NAME_AWARDS = "awards";
    public static final String SERIALIZED_NAME_BOX_OFFICE = "boxOffice";
    public static final String SERIALIZED_NAME_BUDGET = "budget";
    public static final String SERIALIZED_NAME_CHARACTERS = "characters";
    public static final String SERIALIZED_NAME_LISTS = "lists";
    public static final String SERIALIZED_NAME_GENRES = "genres";
    public static final String SERIALIZED_NAME_ID = "id";
    public static final String SERIALIZED_NAME_IMAGE = "image";
    public static final String SERIALIZED_NAME_NAME = "name";
    public static final String SERIALIZED_NAME_NAME_TRANSLATIONS =
            "nameTranslations";
    public static final String SERIALIZED_NAME_ORIGINAL_COUNTRY =
            "originalCountry";
    public static final String SERIALIZED_NAME_ORIGINAL_LANGUAGE =
            "originalLanguage";
    public static final String SERIALIZED_NAME_OVERVIEW_TRANSLATIONS =
            "overviewTranslations";
    public static final String SERIALIZED_NAME_RELEASES = "releases";
    public static final String SERIALIZED_NAME_REMOTE_IDS = "remoteIds";
    public static final String SERIALIZED_NAME_SCORE = "score";
    public static final String SERIALIZED_NAME_SLUG = "slug";
    public static final String SERIALIZED_NAME_STATUS = "status";
    public static final String SERIALIZED_NAME_STUDIOS = "studios";
    public static final String SERIALIZED_NAME_SUBTITLE_LANGUAGES =
            "subtitleLanguages";
    public static final String SERIALIZED_NAME_TRAILERS = "trailers";
    @SerializedName(SERIALIZED_NAME_ALIASES)
    private List<Alias> aliases = null;
    @SerializedName(SERIALIZED_NAME_ARTWORKS)
    private List<ArtworkBaseRecord> artworks = null;
    @SerializedName(SERIALIZED_NAME_AUDIO_LANGUAGES)
    private List<String> audioLanguages = null;
    @SerializedName(SERIALIZED_NAME_AWARDS)
    private List<AwardBaseRecord> awards = null;
    @SerializedName(SERIALIZED_NAME_BOX_OFFICE)
    private String boxOffice;
    @SerializedName(SERIALIZED_NAME_BUDGET)
    private String budget;
    @SerializedName(SERIALIZED_NAME_CHARACTERS)
    private List<Character> characters = null;
    @SerializedName(SERIALIZED_NAME_LISTS)
    private List<ListBaseRecord> lists = null;
    @SerializedName(SERIALIZED_NAME_GENRES)
    private List<GenreBaseRecord> genres = null;
    @SerializedName(SERIALIZED_NAME_ID)
    private Long id;
    @SerializedName(SERIALIZED_NAME_IMAGE)
    private String image;
    @SerializedName(SERIALIZED_NAME_NAME)
    private String name;
    @SerializedName(SERIALIZED_NAME_NAME_TRANSLATIONS)
    private List<String> nameTranslations = null;
    @SerializedName(SERIALIZED_NAME_ORIGINAL_COUNTRY)
    private String originalCountry;
    @SerializedName(SERIALIZED_NAME_ORIGINAL_LANGUAGE)
    private String originalLanguage;
    @SerializedName(SERIALIZED_NAME_OVERVIEW_TRANSLATIONS)
    private List<String> overviewTranslations = null;
    @SerializedName(SERIALIZED_NAME_RELEASES)
    private List<Release> releases = null;
    @SerializedName(SERIALIZED_NAME_REMOTE_IDS)
    private List<RemoteID> remoteIds = null;
    @SerializedName(SERIALIZED_NAME_SCORE)
    private Double score;
    @SerializedName(SERIALIZED_NAME_SLUG)
    private String slug;
    @SerializedName(SERIALIZED_NAME_STATUS)
    private Status status;
    @SerializedName(SERIALIZED_NAME_STUDIOS)
    private List<StudioBaseRecord> studios = null;
    @SerializedName(SERIALIZED_NAME_SUBTITLE_LANGUAGES)
    private List<String> subtitleLanguages = null;
    @SerializedName(SERIALIZED_NAME_TRAILERS)
    private List<Trailer> trailers = null;

    public MovieExtendedRecord aliases(List<Alias> aliases) {

        this.aliases = aliases;
        return this;
    }

    public MovieExtendedRecord addAliasesItem(Alias aliasesItem) {
        if (this.aliases == null) {
            this.aliases = new ArrayList<>();
        }
        this.aliases.add(aliasesItem);
        return this;
    }

    /**
     * Get aliases
     *
     * @return aliases
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<Alias> getAliases() {
        return aliases;
    }

    public void setAliases(List<Alias> aliases) {
        this.aliases = aliases;
    }

    public MovieExtendedRecord artworks(List<ArtworkBaseRecord> artworks) {

        this.artworks = artworks;
        return this;
    }

    public MovieExtendedRecord addArtworksItem(ArtworkBaseRecord artworksItem) {
        if (this.artworks == null) {
            this.artworks = new ArrayList<>();
        }
        this.artworks.add(artworksItem);
        return this;
    }

    /**
     * Get artworks
     *
     * @return artworks
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<ArtworkBaseRecord> getArtworks() {
        return artworks;
    }

    public void setArtworks(List<ArtworkBaseRecord> artworks) {
        this.artworks = artworks;
    }

    public MovieExtendedRecord audioLanguages(List<String> audioLanguages) {

        this.audioLanguages = audioLanguages;
        return this;
    }

    public MovieExtendedRecord addAudioLanguagesItem(String audioLanguagesItem) {
        if (this.audioLanguages == null) {
            this.audioLanguages = new ArrayList<>();
        }
        this.audioLanguages.add(audioLanguagesItem);
        return this;
    }

    /**
     * Get audioLanguages
     *
     * @return audioLanguages
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getAudioLanguages() {
        return audioLanguages;
    }

    public void setAudioLanguages(List<String> audioLanguages) {
        this.audioLanguages = audioLanguages;
    }

    public MovieExtendedRecord awards(List<AwardBaseRecord> awards) {

        this.awards = awards;
        return this;
    }

    public MovieExtendedRecord addAwardsItem(AwardBaseRecord awardsItem) {
        if (this.awards == null) {
            this.awards = new ArrayList<>();
        }
        this.awards.add(awardsItem);
        return this;
    }

    /**
     * Get awards
     *
     * @return awards
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<AwardBaseRecord> getAwards() {
        return awards;
    }

    public void setAwards(List<AwardBaseRecord> awards) {
        this.awards = awards;
    }

    public MovieExtendedRecord boxOffice(String boxOffice) {

        this.boxOffice = boxOffice;
        return this;
    }

    /**
     * Get boxOffice
     *
     * @return boxOffice
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getBoxOffice() {
        return boxOffice;
    }

    public void setBoxOffice(String boxOffice) {
        this.boxOffice = boxOffice;
    }

    public MovieExtendedRecord budget(String budget) {

        this.budget = budget;
        return this;
    }

    /**
     * Get budget
     *
     * @return budget
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getBudget() {
        return budget;
    }

    public void setBudget(String budget) {
        this.budget = budget;
    }

    public MovieExtendedRecord characters(List<Character> characters) {

        this.characters = characters;
        return this;
    }

    public MovieExtendedRecord addCharactersItem(Character charactersItem) {
        if (this.characters == null) {
            this.characters = new ArrayList<>();
        }
        this.characters.add(charactersItem);
        return this;
    }

    /**
     * Get characters
     *
     * @return characters
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<Character> getCharacters() {
        return characters;
    }

    public void setCharacters(List<Character> characters) {
        this.characters = characters;
    }

    public MovieExtendedRecord lists(List<ListBaseRecord> lists) {

        this.lists = lists;
        return this;
    }

    public MovieExtendedRecord addListsItem(ListBaseRecord listsItem) {
        if (this.lists == null) {
            this.lists = new ArrayList<>();
        }
        this.lists.add(listsItem);
        return this;
    }

    /**
     * Get lists
     *
     * @return lists
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<ListBaseRecord> getLists() {
        return lists;
    }

    public void setLists(List<ListBaseRecord> lists) {
        this.lists = lists;
    }

    public MovieExtendedRecord genres(List<GenreBaseRecord> genres) {

        this.genres = genres;
        return this;
    }

    public MovieExtendedRecord addGenresItem(GenreBaseRecord genresItem) {
        if (this.genres == null) {
            this.genres = new ArrayList<>();
        }
        this.genres.add(genresItem);
        return this;
    }

    /**
     * Get genres
     *
     * @return genres
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<GenreBaseRecord> getGenres() {
        return genres;
    }

    public void setGenres(List<GenreBaseRecord> genres) {
        this.genres = genres;
    }

    public MovieExtendedRecord id(Long id) {

        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public MovieExtendedRecord image(String image) {

        this.image = image;
        return this;
    }

    /**
     * Get image
     *
     * @return image
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getImage() {
        return image;
    }

    public void setImage(String image) {
        this.image = image;
    }

    public MovieExtendedRecord name(String name) {

        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public MovieExtendedRecord nameTranslations(List<String> nameTranslations) {

        this.nameTranslations = nameTranslations;
        return this;
    }

    public MovieExtendedRecord
    addNameTranslationsItem(String nameTranslationsItem) {
        if (this.nameTranslations == null) {
            this.nameTranslations = new ArrayList<>();
        }
        this.nameTranslations.add(nameTranslationsItem);
        return this;
    }

    /**
     * Get nameTranslations
     *
     * @return nameTranslations
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getNameTranslations() {
        return nameTranslations;
    }

    public void setNameTranslations(List<String> nameTranslations) {
        this.nameTranslations = nameTranslations;
    }

    public MovieExtendedRecord originalCountry(String originalCountry) {

        this.originalCountry = originalCountry;
        return this;
    }

    /**
     * Get originalCountry
     *
     * @return originalCountry
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getOriginalCountry() {
        return originalCountry;
    }

    public void setOriginalCountry(String originalCountry) {
        this.originalCountry = originalCountry;
    }

    public MovieExtendedRecord originalLanguage(String originalLanguage) {

        this.originalLanguage = originalLanguage;
        return this;
    }

    /**
     * Get originalLanguage
     *
     * @return originalLanguage
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getOriginalLanguage() {
        return originalLanguage;
    }

    public void setOriginalLanguage(String originalLanguage) {
        this.originalLanguage = originalLanguage;
    }

    public MovieExtendedRecord
    overviewTranslations(List<String> overviewTranslations) {

        this.overviewTranslations = overviewTranslations;
        return this;
    }

    public MovieExtendedRecord
    addOverviewTranslationsItem(String overviewTranslationsItem) {
        if (this.overviewTranslations == null) {
            this.overviewTranslations = new ArrayList<>();
        }
        this.overviewTranslations.add(overviewTranslationsItem);
        return this;
    }

    /**
     * Get overviewTranslations
     *
     * @return overviewTranslations
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getOverviewTranslations() {
        return overviewTranslations;
    }

    public void setOverviewTranslations(List<String> overviewTranslations) {
        this.overviewTranslations = overviewTranslations;
    }

    public MovieExtendedRecord releases(List<Release> releases) {

        this.releases = releases;
        return this;
    }

    public MovieExtendedRecord addReleasesItem(Release releasesItem) {
        if (this.releases == null) {
            this.releases = new ArrayList<>();
        }
        this.releases.add(releasesItem);
        return this;
    }

    /**
     * Get releases
     *
     * @return releases
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<Release> getReleases() {
        return releases;
    }

    public void setReleases(List<Release> releases) {
        this.releases = releases;
    }

    public MovieExtendedRecord remoteIds(List<RemoteID> remoteIds) {

        this.remoteIds = remoteIds;
        return this;
    }

    public MovieExtendedRecord addRemoteIdsItem(RemoteID remoteIdsItem) {
        if (this.remoteIds == null) {
            this.remoteIds = new ArrayList<>();
        }
        this.remoteIds.add(remoteIdsItem);
        return this;
    }

    /**
     * Get remoteIds
     *
     * @return remoteIds
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<RemoteID> getRemoteIds() {
        return remoteIds;
    }

    public void setRemoteIds(List<RemoteID> remoteIds) {
        this.remoteIds = remoteIds;
    }

    public MovieExtendedRecord score(Double score) {

        this.score = score;
        return this;
    }

    /**
     * Get score
     *
     * @return score
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Double getScore() {
        return score;
    }

    public void setScore(Double score) {
        this.score = score;
    }

    public MovieExtendedRecord slug(String slug) {

        this.slug = slug;
        return this;
    }

    /**
     * Get slug
     *
     * @return slug
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getSlug() {
        return slug;
    }

    public void setSlug(String slug) {
        this.slug = slug;
    }

    public MovieExtendedRecord status(Status status) {

        this.status = status;
        return this;
    }

    /**
     * Get status
     *
     * @return status
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Status getStatus() {
        return status;
    }

    public void setStatus(Status status) {
        this.status = status;
    }

    public MovieExtendedRecord studios(List<StudioBaseRecord> studios) {

        this.studios = studios;
        return this;
    }

    public MovieExtendedRecord addStudiosItem(StudioBaseRecord studiosItem) {
        if (this.studios == null) {
            this.studios = new ArrayList<>();
        }
        this.studios.add(studiosItem);
        return this;
    }

    /**
     * Get studios
     *
     * @return studios
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<StudioBaseRecord> getStudios() {
        return studios;
    }

    public void setStudios(List<StudioBaseRecord> studios) {
        this.studios = studios;
    }

    public MovieExtendedRecord subtitleLanguages(List<String> subtitleLanguages) {

        this.subtitleLanguages = subtitleLanguages;
        return this;
    }

    public MovieExtendedRecord
    addSubtitleLanguagesItem(String subtitleLanguagesItem) {
        if (this.subtitleLanguages == null) {
            this.subtitleLanguages = new ArrayList<>();
        }
        this.subtitleLanguages.add(subtitleLanguagesItem);
        return this;
    }

    /**
     * Get subtitleLanguages
     *
     * @return subtitleLanguages
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getSubtitleLanguages() {
        return subtitleLanguages;
    }

    public void setSubtitleLanguages(List<String> subtitleLanguages) {
        this.subtitleLanguages = subtitleLanguages;
    }

    public MovieExtendedRecord trailers(List<Trailer> trailers) {

        this.trailers = trailers;
        return this;
    }

    public MovieExtendedRecord addTrailersItem(Trailer trailersItem) {
        if (this.trailers == null) {
            this.trailers = new ArrayList<>();
        }
        this.trailers.add(trailersItem);
        return this;
    }

    /**
     * Get trailers
     *
     * @return trailers
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<Trailer> getTrailers() {
        return trailers;
    }

    public void setTrailers(List<Trailer> trailers) {
        this.trailers = trailers;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MovieExtendedRecord movieExtendedRecord = (MovieExtendedRecord) o;
        return Objects.equals(this.aliases, movieExtendedRecord.aliases) &&
                Objects.equals(this.artworks, movieExtendedRecord.artworks) &&
                Objects.equals(this.audioLanguages,
                        movieExtendedRecord.audioLanguages) &&
                Objects.equals(this.awards, movieExtendedRecord.awards) &&
                Objects.equals(this.boxOffice, movieExtendedRecord.boxOffice) &&
                Objects.equals(this.budget, movieExtendedRecord.budget) &&
                Objects.equals(this.characters, movieExtendedRecord.characters) &&
                Objects.equals(this.lists, movieExtendedRecord.lists) &&
                Objects.equals(this.genres, movieExtendedRecord.genres) &&
                Objects.equals(this.id, movieExtendedRecord.id) &&
                Objects.equals(this.image, movieExtendedRecord.image) &&
                Objects.equals(this.name, movieExtendedRecord.name) &&
                Objects.equals(this.nameTranslations,
                        movieExtendedRecord.nameTranslations) &&
                Objects.equals(this.originalCountry,
                        movieExtendedRecord.originalCountry) &&
                Objects.equals(this.originalLanguage,
                        movieExtendedRecord.originalLanguage) &&
                Objects.equals(this.overviewTranslations,
                        movieExtendedRecord.overviewTranslations) &&
                Objects.equals(this.releases, movieExtendedRecord.releases) &&
                Objects.equals(this.remoteIds, movieExtendedRecord.remoteIds) &&
                Objects.equals(this.score, movieExtendedRecord.score) &&
                Objects.equals(this.slug, movieExtendedRecord.slug) &&
                Objects.equals(this.status, movieExtendedRecord.status) &&
                Objects.equals(this.studios, movieExtendedRecord.studios) &&
                Objects.equals(this.subtitleLanguages,
                        movieExtendedRecord.subtitleLanguages) &&
                Objects.equals(this.trailers, movieExtendedRecord.trailers);
    }

    @Override
    public int hashCode() {
        return Objects.hash(aliases, artworks, audioLanguages, awards, boxOffice,
                budget, characters, lists, genres, id, image, name,
                nameTranslations, originalCountry, originalLanguage,
                overviewTranslations, releases, remoteIds, score, slug,
                status, studios, subtitleLanguages, trailers);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class MovieExtendedRecord {\n");
        sb.append("    aliases: ").append(toIndentedString(aliases)).append("\n");
        sb.append("    artworks: ").append(toIndentedString(artworks)).append("\n");
        sb.append("    audioLanguages: ")
                .append(toIndentedString(audioLanguages))
                .append("\n");
        sb.append("    awards: ").append(toIndentedString(awards)).append("\n");
        sb.append("    boxOffice: ")
                .append(toIndentedString(boxOffice))
                .append("\n");
        sb.append("    budget: ").append(toIndentedString(budget)).append("\n");
        sb.append("    characters: ")
                .append(toIndentedString(characters))
                .append("\n");
        sb.append("    lists: ").append(toIndentedString(lists)).append("\n");
        sb.append("    genres: ").append(toIndentedString(genres)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    image: ").append(toIndentedString(image)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    nameTranslations: ")
                .append(toIndentedString(nameTranslations))
                .append("\n");
        sb.append("    originalCountry: ")
                .append(toIndentedString(originalCountry))
                .append("\n");
        sb.append("    originalLanguage: ")
                .append(toIndentedString(originalLanguage))
                .append("\n");
        sb.append("    overviewTranslations: ")
                .append(toIndentedString(overviewTranslations))
                .append("\n");
        sb.append("    releases: ").append(toIndentedString(releases)).append("\n");
        sb.append("    remoteIds: ")
                .append(toIndentedString(remoteIds))
                .append("\n");
        sb.append("    score: ").append(toIndentedString(score)).append("\n");
        sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    studios: ").append(toIndentedString(studios)).append("\n");
        sb.append("    subtitleLanguages: ")
                .append(toIndentedString(subtitleLanguages))
                .append("\n");
        sb.append("    trailers: ").append(toIndentedString(trailers)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
