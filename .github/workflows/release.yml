name: Build Releases

on:
  push:
    branches: [ v2 ]

jobs:
  #  build-windows:
  #    runs-on: windows-latest
  #    steps:
  #      - name: Checkout Repository
  #        uses: actions/checkout@v2
  #
  #      - name: Install MSVC
  #        uses: ilammy/msvc-dev-cmd@v1.5.0
  #
  #      - name: Setup MS Build Tools
  #        uses: microsoft/setup-msbuild@v1
  #
  #      - name: Setup Graalvm
  #        id: setup-graalvm
  #        uses: graalvm/setup-graalvm@v1
  #        with:
  #          version: '21.3.0'
  #          java-version: '11'
  #          components: 'native-image'
  #          github-token: ${{ secrets.GITHUB_TOKEN }}
  #
  #      - name: Create app config for building
  #        run: copy src\main\resources\config.sample src\main\resources\application.yaml
  #        shell: cmd
  #
  #      - name: Alter pomx.xml for windows build
  #        run: sed -i 's/com.sun.proxy.$Proxy303/com.sun.proxy.$Proxy303\\,com.sun.proxy.$Proxy285/' pom.xml
  #
  #      - name: Build native-image release
  #        run: mvn clean generate-resources compile package -Pnative
  #
  #      - name: Rename executable
  #        run: |
  #          cd target
  #          rename plexbot-runner.exe plexbot-win64.exe
  #        shell: cmd
  #
  #      - name: Upload executable
  #        uses: actions/upload-artifact@v2
  #        with:
  #          name: plexbot-win64.exe
  #          path: target\plexbot-win64.exe
  #          retention-days: 1

  build-macOS:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Graalvm
        id: setup-graalvm
        uses: graalvm/setup-graalvm@v1
        with:
          version: '21.3.0'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create app config for building
        run: cp src/main/resources/config.sample src/main/resources/application.yaml

      - name: Build native-image release
        run: mvn clean generate-resources compile package -Pnative-macos

      - name: Rename executable
        run: mv target/plexbot-runner target/plexbot-darwin64

      - name: Upload executable
        uses: actions/upload-artifact@v2
        with:
          name: plexbot-darwin64
          path: target/plexbot-darwin64
          retention-days: 1

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Graalvm
        id: setup-graalvm
        uses: graalvm/setup-graalvm@v1
        with:
          version: '21.3.0'
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create app config for building
        run: cp src/main/resources/config.sample src/main/resources/application.yaml

      - name: Build native-image release
        run: mvn clean generate-resources compile package -Pnative-linux

      - name: Rename executable
        run: mv target/plexbot-runner target/plexbot-linux64

      - name: Upload executable
        uses: actions/upload-artifact@v2
        with:
          name: plexbot-linux64
          path: target/plexbot-linux64
          retention-days: 1

  build-jar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Graalvm
        id: setup-graalvm
        uses: graalvm/setup-graalvm@v1
        with:
          version: '21.3.0'
          java-version: '11'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create app config for building
        run: cp src/main/resources/config.sample src/main/resources/application.yaml

      - name: Build jar release
        run: mvn clean generate-resources compile package -Puber

      - name: Rename jar
        run: mv target/plexbot-runner.jar target/plexbot.jar

      - name: Upload jar
        uses: actions/upload-artifact@v2
        with:
          name: plexbot.jar
          path: target/plexbot.jar
          retention-days: 1

  create-release:
    #    needs: [build-windows, build-macOS, build-linux, build-jar]
    needs: [build-macOS, build-linux, build-jar]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      #      - name: Download windows executable
      #        uses: actions/download-artifact@v2
      #        with:
      #          name: plexbot-win64.exe

      - name: Download macOS executable
        uses: actions/download-artifact@v2
        with:
          name: plexbot-darwin64

      - name: Download linux executable
        uses: actions/download-artifact@v2
        with:
          name: plexbot-linux64

      - name: Download jar
        uses: actions/download-artifact@v2
        with:
          name: plexbot.jar

      - name: Fetch release version
        id: fetch-release-version
        run: echo "::set-output name=release-version::$(cat pom.xml | sed -n 's/  <version>\(.*\)<\/version>/\1/p; /version>/q')"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.fetch-release-version.outputs.release-version }}
          tag_name: ${{ steps.fetch-release-version.outputs.release-version }}
          draft: true
          prerelease: false
          files: |
            plexbot-darwin64
            plexbot-linux64
            plexbot.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}